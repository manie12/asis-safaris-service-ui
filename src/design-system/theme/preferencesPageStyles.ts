import type { SxProps, Theme } from '@mui/material/styles';

import { colorTokens, radiusTokens, spacingTokens, typographyTokens } from './tokens';

const heroOverlayPattern = `url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Cpath d='m36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E")`;

export const preferencesPageStyles = {
  main: {
    role: 'main',
    backgroundImage: `linear-gradient(135deg, ${colorTokens.neutral[50]} 0%, r`,
    minHeight: '100vh',
  } satisfies SxProps<Theme>,
  heroSection: {
    position: 'relative',
    height: { xs: 440, md: 300 },
    overflow: 'hidden',
  } satisfies SxProps<Theme>,
  heroMediaWrap: {
    position: 'absolute',
    inset: 0,
  } satisfies SxProps<Theme>,
  heroImage: {
    width: '100%',
    height: '100%',
    objectFit: 'cover',
  } satisfies SxProps<Theme>,
  heroOverlay: {
    position: 'absolute',
    inset: 0,
    backgroundImage:
      'linear-gradient(112deg, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.35) 42%, rgba(0,0,0,0.05) 100%)',
  } satisfies SxProps<Theme>,
  heroContentWrap: {
    position: 'relative',
    height: '100%',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'flex-start',
    maxWidth: '1120px',
    margin: '0 auto',
    padding: { xs: '0 24px', md: '0 32px' },
  } satisfies SxProps<Theme>,
  heroCopy: {
    maxWidth: { xs: '100%', md: 600 },
    color: colorTokens.neutral.white,
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.sm,
  } satisfies SxProps<Theme>,
  heroTitle: {
    fontFamily: typographyTokens.heading,
    fontWeight: 700,
    fontSize: { xs: 36, md: 52 },
    lineHeight: 1.1,
  } satisfies SxProps<Theme>,
  heroDescription: {
    fontSize: { xs: 18, md: 20 },
    color: 'rgba(255,255,255,0.9)',
  } satisfies SxProps<Theme>,
  heroHighlights: {
    display: 'flex',
    flexWrap: 'wrap',
    gap: spacingTokens.sm,
  } satisfies SxProps<Theme>,
  heroHighlight: {
    display: 'inline-flex',
    alignItems: 'center',
    gap: spacingTokens.xs,
    padding: '10px 18px',
    borderRadius: 2,
    backgroundColor: 'rgba(255,255,255,0.18)',
    backdropFilter: 'blur(8px)',
    fontSize: 13,
    fontWeight: 600,
    color: colorTokens.neutral.white,
  } satisfies SxProps<Theme>,
  wizardSection: {
    padding: { xs: '48px 0', md: '64px 0' },
  } satisfies SxProps<Theme>,
  wizardContainer: {
    maxWidth: '1040px',
    margin: '0 auto',
    padding: { xs: '0 24px', md: '0 32px' },
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  progressHeader: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'start',
    flexWrap: 'wrap',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  progressSteps: {
    display: 'flex',
    alignItems: 'center',
    gap: spacingTokens.xs,
    flexWrap: 'wrap',
  } satisfies SxProps<Theme>,
  progressStep: {
    display: 'flex',
    alignItems: 'center',
    gap: spacingTokens.sm,
  } satisfies SxProps<Theme>,
  progressNode: {
    width: 32,
    height: 32,
    borderRadius: '50%',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    fontSize: 14,
    fontWeight: 600,
    boxShadow: '0 12px 24px rgba(238, 92, 40, 0.28)',
  } satisfies SxProps<Theme>,
  progressLabel: {
    fontSize: 13,
    fontWeight: 600,
  } satisfies SxProps<Theme>,
  progressConnector: {
    width: 72,
    height: 4,
    borderRadius: 999,
    backgroundColor: 'rgba(210, 195, 176, 0.6)',
    overflow: 'hidden',
  } satisfies SxProps<Theme>,
  progressConnectorActive: {
    width: '100%',
    height: '100%',
    borderRadius: 'inherit',
    backgroundImage: `linear-gradient(135deg, ${colorTokens.safari[400]} 0%, ${colorTokens.safari[600]} 100%)`,
  } satisfies SxProps<Theme>,
  formCard: {
    backgroundColor: 'rgba(255,255,255,0.92)',
    backdropFilter: 'blur(15px)',
    borderRadius: 2,
    border: '1px solid rgba(210, 195, 176, 0.4)',
    boxShadow: '0 30px 60px rgba(61, 48, 36, 0.16)',
    padding: { xs: spacingTokens.sm, md: spacingTokens.sm },
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  formHeaderTitle: {
    fontFamily: typographyTokens.heading,
    fontSize: { xs: 28, md: 36 },
    fontWeight: 700,
    color: colorTokens.earth[800],
  } satisfies SxProps<Theme>,
  formHeaderDescription: {
    fontSize: 15,
    color: 'rgba(90,68,51,0.7)',
  } satisfies SxProps<Theme>,
  formGrid: {
    display: 'grid',
    gridTemplateColumns: { xs: '1fr', md: 'repeat(2, minmax(0,1fr))' },
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  inputSection: {
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  inputSectionTitle: {
    fontFamily: typographyTokens.heading,
    fontSize: 22,
    fontWeight: 600,
    color: colorTokens.earth[800],
  } satisfies SxProps<Theme>,
  inputSectionDescription: {
    fontSize: 13,
    color: 'rgba(74, 57, 42, 0.65)',
  } satisfies SxProps<Theme>,
  optionGroup: {
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  optionCard: {
    display: 'flex',
    alignItems: 'center',
    gap: spacingTokens.xs,
    padding: spacingTokens.xs,
    borderRadius: 28,
    border: '2px solid rgba(214, 198, 178, 0.5)',
    transition: 'border-color 0.2s ease, transform 0.2s ease',
    cursor: 'pointer',
    backgroundColor: 'rgba(255,255,255,0.85)',
    '&:hover': {
      borderColor: 'rgba(238, 92, 40, 0.45)',
      transform: 'translateY(-2px)',
    },
  } satisfies SxProps<Theme>,
  optionIconWrap: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    width: 56,
    height: 56,
    borderRadius: radiusTokens.lg,
    flexShrink: 0,
  } satisfies SxProps<Theme>,
  optionTitle: {
    fontWeight: 600,
    color: colorTokens.earth[800],
  } satisfies SxProps<Theme>,
  optionSubtitle: {
    fontSize: 13,
    color: 'rgba(74,57,42,0.65)',
  } satisfies SxProps<Theme>,
  budgetCard: {
    borderRadius: 2,
    padding: spacingTokens.xs,
    backgroundColor: 'rgba(249, 246, 240, 0.8)',
  } satisfies SxProps<Theme>,
  budgetScale: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between',
    fontSize: 13,
    fontWeight: 600,
    color: 'rgba(74,57,42,0.7)',
    marginBottom: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  sliderValueBadge: {
    display: 'inline-flex',
    alignItems: 'center',
    justifyContent: 'center',
    marginTop: spacingTokens.sm,
    backgroundImage: `linear-gradient(135deg, ${colorTokens.safari[500]} 0%, ${colorTokens.safari[600]} 100%)`,
    color: colorTokens.neutral.white,
    padding: '8px 16px',
    borderRadius: radiusTokens.md,
    fontWeight: 600,
    boxShadow: '0 12px 24px rgba(238, 92, 40, 0.25)',
  } satisfies SxProps<Theme>,
  durationGrid: {
    display: 'grid',
    gridTemplateColumns: 'repeat(2, minmax(0,1fr))',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  durationOption: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    padding: spacingTokens.xs,
    borderRadius: 1,
    border: '2px solid rgba(214, 198, 178, 0.6)',
    cursor: 'pointer',
    fontWeight: 600,
    color: colorTokens.earth[800],
    transition: 'border-color 0.2s ease, background-color 0.2s ease',
    '&:hover': {
      borderColor: 'rgba(238, 92, 40, 0.45)',
      backgroundColor: 'rgba(238, 92, 40, 0.08)',
    },
  } satisfies SxProps<Theme>,
  checkboxGroup: {
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  checkboxOption: {
    display: 'flex',
    alignItems: 'center',
    gap: spacingTokens.xs,
    padding: spacingTokens.xs,
    borderRadius: 1,
    border: '1px solid rgba(214, 198, 178, 0.6)',
    cursor: 'pointer',
    transition: 'background-color 0.2s ease, border-color 0.2s ease',
    '&:hover': {
      backgroundColor: 'rgba(245, 243, 240, 0.8)',
      borderColor: 'rgba(214, 198, 178, 0.9)',
    },
  } satisfies SxProps<Theme>,
  checkboxLabel: {
    fontSize: 14,
    color: colorTokens.earth[800],
  } satisfies SxProps<Theme>,
  interestGrid: {
    display: 'grid',
    gridTemplateColumns: 'repeat(2, minmax(0,1fr))',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  formFooter: {
    display: 'flex',
    flexDirection: { xs: 'column', sm: 'row' },
    alignItems: { xs: 'stretch', sm: 'center' },
    justifyContent: 'space-between',
    gap: spacingTokens.xs,
    paddingTop: spacingTokens.xs,
    marginTop: spacingTokens.xs,
    borderTop: '1px solid rgba(214, 198, 178, 0.6)',
  } satisfies SxProps<Theme>,
  footerButtonSecondary: {
    display: 'inline-flex',
    alignItems: 'center',
    justifyContent: 'center',
    gap: spacingTokens.xs,
    padding: '12px 20px',
    borderRadius: radiusTokens.lg,
    border: 'none',
    background: 'none',
    fontWeight: 600,
    color: 'rgba(74,57,42,0.75)',
    cursor: 'pointer',
    transition: 'color 0.2s ease',
    '&:hover': {
      color: colorTokens.safari[600],
    },
  } satisfies SxProps<Theme>,
  footerButtonPrimary: {
    display: 'inline-flex',
    alignItems: 'center',
    justifyContent: 'center',
    gap: spacingTokens.xs,
    padding: '14px 28px',
    borderRadius: 28,
    backgroundImage: `linear-gradient(135deg, ${colorTokens.safari[500]} 0%, ${colorTokens.safari[600]} 100%)`,
    color: colorTokens.neutral.white,
    fontWeight: 600,
    border: 'none',
    cursor: 'pointer',
    transition: 'transform 0.2s ease, box-shadow 0.2s ease, background-image 0.2s ease',
    boxShadow: '0 18px 36px rgba(238, 92, 40, 0.28)',
    '&:hover': {
      transform: 'translateY(-2px) scale(1.01)',
      boxShadow: '0 24px 46px rgba(238, 92, 40, 0.32)',
      backgroundImage: `linear-gradient(135deg, ${colorTokens.safari[600]} 0%, ${colorTokens.safari[700]} 100%)`,
    },
  } satisfies SxProps<Theme>,
  sectionWrap: {
    padding: { xs: '48px 0', md: '64px 0' },
  } satisfies SxProps<Theme>,
  sectionContainer: {
    maxWidth: '1160px',
    margin: '0 auto',
    padding: { xs: '0 24px', md: '0 32px' },
  } satisfies SxProps<Theme>,
  sectionHeader: {
    textAlign: 'center',
    maxWidth: 760,
    margin: '0 auto',
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
    marginBottom: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  sectionTitle: {
    fontFamily: typographyTokens.heading,
    fontSize: { xs: 30, md: 40 },
    fontWeight: 700,
    color: colorTokens.earth[800],
  } satisfies SxProps<Theme>,
  sectionSubtitle: {
    fontSize: 18,
    color: 'rgba(74,57,42,0.7)',
  } satisfies SxProps<Theme>,
  inspirationGrid: {
    display: 'grid',
    gridTemplateColumns: {
      xs: 'repeat(auto-fit, minmax(260px, 1fr))',
      md: 'repeat(3, minmax(0,1fr))',
    },
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  inspirationCard: {
    backgroundColor: 'rgba(255,255,255,0.9)',
    borderRadius: 2,
    border: '1px solid rgba(214,198,178,0.4)',
    overflow: 'hidden',
    boxShadow: '0 28px 60px rgba(61,48,36,0.16)',
    transition: 'transform 0.25s ease, box-shadow 0.25s ease',
    '&:hover': {
      transform: 'translateY(-4px) scale(1.01)',
      boxShadow: '0 36px 70px rgba(61,48,36,0.22)',
    },
  } satisfies SxProps<Theme>,
  inspirationMedia: {
    height: 200,
    overflow: 'hidden',
  } satisfies SxProps<Theme>,
  inspirationImage: {
    width: '100%',
    height: '100%',
    objectFit: 'cover',
  } satisfies SxProps<Theme>,
  inspirationContent: {
    padding: spacingTokens.xs,
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  inspirationBadgeRow: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between',
  } satisfies SxProps<Theme>,
  inspirationBadge: {
    display: 'inline-flex',
    alignItems: 'center',
    justifyContent: 'center',
    padding: '6px 14px',
    borderRadius: radiusTokens.pill,
    fontSize: 11,
    fontWeight: 600,
    backgroundImage: `linear-gradient(135deg, ${colorTokens.safari[100]} 0%, rgba(244,185,66,0.35) 100%)`,
    color: colorTokens.safari[700],
  } satisfies SxProps<Theme>,
  cardMetaRow: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between',
    fontSize: 13,
    color: 'rgba(74,57,42,0.7)',
  } satisfies SxProps<Theme>,
  callToActionWrap: {
    marginTop: spacingTokens.sm,
    display: 'flex',
    justifyContent: 'center',
  } satisfies SxProps<Theme>,
  secondaryCtaButton: {
    display: 'inline-flex',
    alignItems: 'center',
    gap: spacingTokens.xs,
    padding: '14px 28px',
    borderRadius: 28,
    backgroundColor: 'rgba(255,255,255,0.85)',
    border: '1px solid rgba(214,198,178,0.7)',
    color: 'rgba(74,57,42,0.85)',
    fontWeight: 600,
    cursor: 'pointer',
    transition: 'background-color 0.2s ease, border-color 0.2s ease, box-shadow 0.2s ease',
    boxShadow: '0 16px 36px rgba(61,48,36,0.12)',
    '&:hover': {
      backgroundColor: colorTokens.neutral.white,
      borderColor: colorTokens.safari[400],
      boxShadow: '0 20px 40px rgba(61,48,36,0.18)',
    },
  } satisfies SxProps<Theme>,
  expertSection: {
    position: 'relative',
  } satisfies SxProps<Theme>,
  expertCard: {
    position: 'relative',
    backgroundImage: `linear-gradient(135deg, ${colorTokens.earth[600]} 0%, ${colorTokens.earth[700]} 45%, ${colorTokens.safari[800]} 100%)`,
    borderRadius: 2,
    padding: { xs: spacingTokens.xs, md: spacingTokens.xs * 1.5 },
    color: colorTokens.neutral.white,
    overflow: 'hidden',
    boxShadow: '0 36px 80px rgba(61, 48, 36, 0.35)',
  } satisfies SxProps<Theme>,
  expertPattern: {
    position: 'absolute',
    inset: 0,
    backgroundImage: heroOverlayPattern,
    opacity: 0.35,
  } satisfies SxProps<Theme>,
  expertContent: {
    position: 'relative',
    display: 'grid',
    gridTemplateColumns: { xs: '1fr', md: '1fr 1fr' },
    gap: spacingTokens.xl,
    alignItems: 'center',
  } satisfies SxProps<Theme>,
  expertList: {
    listStyle: 'none',
    margin: 0,
    padding: 0,
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  expertListItem: {
    display: 'flex',
    alignItems: 'center',
    gap: spacingTokens.sm,
    fontSize: 15,
  } satisfies SxProps<Theme>,
  expertActions: {
    display: 'flex',
    flexWrap: 'wrap',
    gap: spacingTokens.xs,
    marginTop: spacingTokens.sm,
  } satisfies SxProps<Theme>,
  expertPrimaryButton: {
    display: 'inline-flex',
    alignItems: 'center',
    gap: spacingTokens.xs,
    padding: '12px 22px',
    borderRadius: 1,
    backgroundColor: colorTokens.neutral.white,
    color: colorTokens.earth[800],
    fontWeight: 600,
    border: 'none',
    cursor: 'pointer',
    boxShadow: '0 18px 36px rgba(0,0,0,0.25)',
    transition: 'background-color 0.2s ease, transform 0.2s ease',
    '&:hover': {
      backgroundColor: 'rgba(249, 246, 240, 0.9)',
      transform: 'translateY(-1px)',
    },
  } satisfies SxProps<Theme>,
  expertSecondaryButton: {
    display: 'inline-flex',
    alignItems: 'center',
    gap: spacingTokens.xs,
    padding: '12px 22px',
    borderRadius: 1,
    backgroundColor: '#22C55E',
    color: colorTokens.neutral.white,
    fontWeight: 600,
    border: 'none',
    cursor: 'pointer',
    boxShadow: '0 18px 36px rgba(34,197,94,0.35)',
    transition: 'background-color 0.2s ease, transform 0.2s ease',
    '&:hover': {
      backgroundColor: '#16A34A',
      transform: 'translateY(-1px)',
    },
  } satisfies SxProps<Theme>,
  expertProfileCard: {
    backgroundColor: 'rgba(255,255,255,0.12)',
    border: '1px solid rgba(255,255,255,0.25)',
    borderRadius: 2,
    padding: spacingTokens.xs,
    backdropFilter: 'blur(12px)',
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  expertAvatar: {
    width: 96,
    height: 96,
    borderRadius: '50%',
    overflow: 'hidden',
    border: '4px solid rgba(255,255,255,0.35)',
  } satisfies SxProps<Theme>,
  featuresGrid: {
    display: 'grid',
    gridTemplateColumns: {
      xs: 'repeat(auto-fit,minmax(220px,1fr))',
      md: 'repeat(4, minmax(0,1fr))',
    },
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  featureCard: {
    textAlign: 'center',
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  featureIconShell: {
    borderRadius: 1,
    padding: spacingTokens.xs,
    transition: 'box-shadow 0.25s ease, transform 0.25s ease',
    boxShadow: '0 24px 48px rgba(61,48,36,0.18)',
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    justifyContent: 'center',
  } satisfies SxProps<Theme>,
  testimonialsGrid: {
    display: 'grid',
    gridTemplateColumns: {
      xs: 'repeat(auto-fit,minmax(260px,1fr))',
      md: 'repeat(3, minmax(0,1fr))',
    },
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  testimonialCard: {
    backgroundColor: 'rgba(255,255,255,0.92)',
    borderRadius: 2,
    border: '1px solid rgba(214,198,178,0.4)',
    padding: spacingTokens.xs,
    boxShadow: '0 28px 60px rgba(61,48,36,0.16)',
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  testimonialHeader: {
    display: 'flex',
    alignItems: 'center',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  testimonialAvatar: {
    width: 48,
    height: 48,
    borderRadius: '50%',
    overflow: 'hidden',
  } satisfies SxProps<Theme>,
  ratingRow: {
    display: 'flex',
    alignItems: 'center',
    gap: 4,
    color: colorTokens.safari[400],
    fontSize: 12,
  } satisfies SxProps<Theme>,
} as const;

export const wizardHeroSharedStyles = {
  heroSection: preferencesPageStyles.heroSection,
  heroMediaWrap: preferencesPageStyles.heroMediaWrap,
  heroImage: preferencesPageStyles.heroImage,
  heroOverlay: preferencesPageStyles.heroOverlay,
  heroContentWrap: preferencesPageStyles.heroContentWrap,
  heroCopy: preferencesPageStyles.heroCopy,
  heroTitle: preferencesPageStyles.heroTitle,
  heroDescription: preferencesPageStyles.heroDescription,
  heroHighlights: preferencesPageStyles.heroHighlights,
  heroHighlight: preferencesPageStyles.heroHighlight,
} as const;

export const wizardProgressSharedStyles = {
  header: preferencesPageStyles.progressHeader,
  steps: preferencesPageStyles.progressSteps,
  stepWrapper: { display: 'flex', alignItems: 'center', gap: spacingTokens.xs },
  step: preferencesPageStyles.progressStep,
  node: preferencesPageStyles.progressNode,
  nodeCompleted: {
    backgroundColor: colorTokens.safari[500],
    color: colorTokens.neutral.white,
    boxShadow: '0 12px 24px rgba(238, 92, 40, 0.28)',
  },
  nodeActive: {
    backgroundColor: colorTokens.safari[500],
    color: colorTokens.neutral.white,
    boxShadow: '0 12px 24px rgba(238, 92, 40, 0.28)',
  },
  nodeUpcoming: {
    backgroundColor: 'rgba(214,198,178,0.6)',
    color: 'rgba(74,57,42,0.85)',
    boxShadow: 'none',
  },
  label: preferencesPageStyles.progressLabel,
  labelCompleted: { color: colorTokens.safari[700] },
  labelActive: { color: colorTokens.safari[700] },
  labelUpcoming: { color: 'rgba(90,68,51,0.65)' },
  connector: preferencesPageStyles.progressConnector,
  connectorFilled: preferencesPageStyles.progressConnectorActive,
  connectorPartial: preferencesPageStyles.progressConnectorActive,
} as const;
