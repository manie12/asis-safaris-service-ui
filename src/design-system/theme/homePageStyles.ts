import type { SxProps, Theme } from '@mui/material/styles';

import { colorTokens, radiusTokens, spacingTokens, typographyTokens } from './tokens';

const backgroundPattern = "url(\"data:image/svg+xml,%3Csvg width='56' height='56' viewBox='0 0 56 56' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23d4c8ba' fill-opacity='0.15'%3E%3Cpath d='M38 32v-4h-2v4h-4v2h4v4h2v-4h4v-2zm0-30V0h-2v4h-4v2h4v4h2V6h4V4zm-30 30v-4h-2v4H2v2h4v4h2v-4h4v-2zm0-30V0h-2v4H2v2h4v4h2V6h4V4z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")";

export const homePageStyles = {
  container: {
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xl,
    position: 'relative',
    zIndex: 0,
  } satisfies SxProps<Theme>,
  breadcrumbNav: {
    display: 'flex',
    alignItems: 'center',
    gap: spacingTokens.sm,
    fontSize: 13,
    color: 'rgba(74, 57, 42, 0.7)',
  } satisfies SxProps<Theme>,
  breadcrumbLink: {
    cursor: 'pointer',
    transition: 'color 0.2s ease',
    '&:hover': {
      color: colorTokens.safari[600],
    },
  } satisfies SxProps<Theme>,
  pageHeader: {
    display: 'flex',
    flexDirection: { xs: 'column', md: 'row' },
    alignItems: { xs: 'flex-start', md: 'center' },
    justifyContent: 'space-between',
    gap: spacingTokens.md,
  } satisfies SxProps<Theme>,
  pageTitle: {
    fontFamily: typographyTokens.heading,
    fontSize: { xs: 32, md: 40 },
    fontWeight: 700,
    color: colorTokens.earth[800],
  } satisfies SxProps<Theme>,
  primaryCta: {
    display: 'inline-flex',
    alignItems: 'center',
    gap: spacingTokens.sm,
    padding: '14px 24px',
    borderRadius: radiusTokens.lg,
    backgroundImage: `linear-gradient(135deg, ${colorTokens.safari[500]} 0%, ${colorTokens.safari[600]} 100%)`,
    color: colorTokens.neutral.white,
    fontWeight: 600,
    boxShadow: '0 18px 35px rgba(238, 92, 40, 0.35)',
    transition: 'transform 0.2s ease, box-shadow 0.2s ease',
    cursor: 'pointer',
    border: 'none',
    '&:hover': {
      transform: 'translateY(-2px) scale(1.02)',
      boxShadow: '0 22px 40px rgba(238, 92, 40, 0.4)',
      backgroundImage: `linear-gradient(135deg, ${colorTokens.safari[600]} 0%, ${colorTokens.safari[700]} 100%)`,
    },
  } satisfies SxProps<Theme>,
  welcomeCard: {
    position: 'relative',
    borderRadius: 2,
    padding: spacingTokens.xs,
    backgroundImage: `linear-gradient(135deg, ${colorTokens.safari[50]} 0%, rgba(244, 185, 66, 0.25) 100%)`,
    border: '1px solid rgba(238, 92, 40, 0.35)',
    boxShadow: '0 28px 60px rgba(238, 92, 40, 0.2)',
    overflow: 'hidden',
  } satisfies SxProps<Theme>,
  welcomePattern: {
    position: 'absolute',
    inset: 0,
    backgroundImage: backgroundPattern,
    opacity: 0.22,
  } satisfies SxProps<Theme>,
  welcomeContent: {
    position: 'relative',
    display: 'flex',
    flexDirection: { xs: 'column', md: 'row' },
    alignItems: { xs: 'flex-start', md: 'center' },
    gap: spacingTokens.xs,
    marginBottom: spacingTokens.sm,
  } satisfies SxProps<Theme>,
  welcomeIconWrap: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    width: 56,
    height: 56,
    borderRadius: 1,
    backgroundImage: `linear-gradient(135deg, ${colorTokens.safari[500]} 0%, ${colorTokens.safari[600]} 100%)`,
    color: colorTokens.neutral.white,
    boxShadow: '0 16px 32px rgba(238, 92, 40, 0.32)',
  } satisfies SxProps<Theme>,
  welcomeHeadline: {
    fontFamily: typographyTokens.heading,
    fontSize: { xs: 24, md: 28 },
    fontWeight: 700,
    color: colorTokens.earth[800],
  } satisfies SxProps<Theme>,
  welcomeDescription: {
    color: 'rgba(74, 57, 42, 0.7)',
    fontSize: 14,
  } satisfies SxProps<Theme>,
  welcomeGrid: {
    position: 'relative',
    display: 'grid',
    gridTemplateColumns: { xs: '1fr', md: 'repeat(3, minmax(0,1fr))' },
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  preferenceCard: {
    backgroundColor: 'rgba(255, 255, 255, 0.85)',
    backdropFilter: 'blur(12px)',
    borderRadius: 2,
    padding: spacingTokens.sm,
    boxShadow: '0 20px 40px rgba(61, 48, 36, 0.12)',
    transition: 'transform 0.18s ease, box-shadow 0.18s ease',
    '&:hover': {
      transform: 'translateY(-4px)',
      boxShadow: '0 24px 48px rgba(61, 48, 36, 0.18)',
    },
  } satisfies SxProps<Theme>,
  preferenceIcon: {
    display: 'inline-flex',
    alignItems: 'center',
    justifyContent: 'center',
    borderRadius: radiusTokens.md,
    padding: spacingTokens.xs,
    marginBottom: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  preferenceTitle: {
    fontWeight: 600,
    color: colorTokens.earth[800],
    marginBottom: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  preferenceDescription: {
    fontSize: 14,
    color: 'rgba(74, 57, 42, 0.65)',
  } satisfies SxProps<Theme>,
  sectionHeader: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between',
    gap: spacingTokens.md,
    marginBottom: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  sectionTitleWrap: {
    display: 'flex',
    alignItems: 'center',
    gap: spacingTokens.sm,
  } satisfies SxProps<Theme>,
  sectionIcon: {
    display: 'inline-flex',
    alignItems: 'center',
    justifyContent: 'center',
    padding: spacingTokens.xs,
    borderRadius: radiusTokens.md,
    backgroundColor: 'rgba(244, 185, 66, 0.25)',
    color: '#d48806',
  } satisfies SxProps<Theme>,
  sectionTitle: {
    fontFamily: typographyTokens.heading,
    fontSize: 28,
    fontWeight: 600,
    color: colorTokens.earth[800],
  } satisfies SxProps<Theme>,
  sectionCta: {
    fontSize: 13,
    fontWeight: 600,
    color: colorTokens.safari[600],
    cursor: 'pointer',
    transition: 'color 0.2s ease',
    '&:hover': {
      color: colorTokens.safari[700],
    },
  } satisfies SxProps<Theme>,
  destinationsGrid: {
    display: 'grid',
    gridTemplateColumns: { xs: 'repeat(auto-fit,minmax(220px,1fr))', md: 'repeat(4, minmax(0,1fr))' },
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  luxuryGrid: {
    display: 'grid',
    gridTemplateColumns: { xs: 'repeat(auto-fit,minmax(260px,1fr))', md: 'repeat(3, minmax(0,1fr))' },
    gap: spacingTokens.lg,
  } satisfies SxProps<Theme>,
  safariCard: {
    borderRadius: 2,
    overflow: 'hidden',
    backgroundColor: 'rgba(255,255,255,0.92)',
    boxShadow: '0 28px 50px rgba(61, 48, 36, 0.16)',
    cursor: 'pointer',
    transition: 'transform 0.18s ease, box-shadow 0.18s ease',
    position: 'relative',
    '&:hover': {
      transform: 'scale(1.02)',
      boxShadow: '0 34px 60px rgba(61, 48, 36, 0.22)',
    },
  } satisfies SxProps<Theme>,
  safariMedia: {
    position: 'relative',
    height: { xs: 180, md: 200 },
    overflow: 'hidden',
  } satisfies SxProps<Theme>,
  safariImage: {
    width: '100%',
    height: '100%',
    objectFit: 'cover',
    transition: 'transform 0.25s ease',
    '.MuiBox-root:hover &': {
      transform: 'scale(1.05)',
    },
  } satisfies SxProps<Theme>,
  safariGradientOverlay: {
    position: 'absolute',
    inset: 0,
    background: 'linear-gradient(180deg, rgba(0,0,0,0.55) 12%, rgba(0,0,0,0.05) 55%, rgba(0,0,0,0.7) 100%)',
  } satisfies SxProps<Theme>,
  safariBadge: {
    position: 'absolute',
    top: spacingTokens.md,
    right: spacingTokens.md,
    padding: '4px 10px',
    borderRadius: radiusTokens.pill,
    backgroundImage: `linear-gradient(135deg, ${colorTokens.safari[500]} 0%, ${colorTokens.safari[600]} 100%)`,
    color: colorTokens.neutral.white,
    fontSize: 11,
    fontWeight: 600,
    textTransform: 'uppercase',
    letterSpacing: 0.4,
  } satisfies SxProps<Theme>,
  safariContent: {
    position: 'absolute',
    bottom: spacingTokens.lg,
    left: spacingTokens.lg,
    right: spacingTokens.lg,
    color: colorTokens.neutral.white,
  } satisfies SxProps<Theme>,
  safariName: {
    fontSize: 16,
    fontWeight: 600,
  } satisfies SxProps<Theme>,
  safariMeta: {
    fontSize: 12,
    color: 'rgba(255,255,255,0.8)',
  } satisfies SxProps<Theme>,
  safariPriceTag: {
    fontWeight: 600,
    fontSize: 18,
  } satisfies SxProps<Theme>,
  safariInfo: {
    position: 'absolute',
    bottom: spacingTokens.lg,
    left: spacingTokens.lg,
    right: spacingTokens.lg,
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between',
    color: colorTokens.neutral.white,
  } satisfies SxProps<Theme>,
} as const;

