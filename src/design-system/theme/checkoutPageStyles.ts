import type { SxProps, Theme } from '@mui/material/styles';

import type { WizardProgressStyles } from '@/shared/components/WizardProgressBar';

import { colorTokens, radiusTokens, spacingTokens, typographyTokens } from './tokens';

const checkoutPageStyles = {
  main: {
    role: 'main',
    minHeight: '100vh',
    backgroundImage: `linear-gradient(135deg, ${colorTokens.neutral[50]} 0%, rgba(253, 244, 220, 0.7) 100%)`,
  } satisfies SxProps<Theme>,
  heroSection: {
    padding: { xs: '48px 0 24px', md: '64px 0 32px' },
  } satisfies SxProps<Theme>,
  heroContainer: {
    maxWidth: 1040,
    margin: '0 auto',
    padding: { xs: '0 24px', md: '0 32px' },
    textAlign: 'center',
  } satisfies SxProps<Theme>,
  heroTitle: {
    fontFamily: typographyTokens.heading,
    fontWeight: 700,
    fontSize: { xs: 32, md: 40 },
    color: colorTokens.earth[800],
  } satisfies SxProps<Theme>,
  heroDescription: {
    fontSize: { xs: 16, md: 18 },
    color: 'rgba(74,57,42,0.7)',
    marginTop: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  heroProgressWrap: {
    marginTop: spacingTokens.xs,
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    gap: spacingTokens.lg,
    flexWrap: 'wrap',
  } satisfies SxProps<Theme>,
  heroProgressStep: {
    display: 'flex',
    alignItems: 'center',
    gap: spacingTokens.xs,
    color: colorTokens.earth[700],
  } satisfies SxProps<Theme>,
  heroProgressNode: {
    width: 40,
    height: 40,
    borderRadius: '50%',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    fontSize: 14,
    fontWeight: 600,
    boxShadow: '0 12px 24px rgba(238, 92, 40, 0.14)',
  } satisfies SxProps<Theme>,
  layoutSection: {
    padding: { xs: '24px 0 64px', md: '32px 0 96px' },
  } satisfies SxProps<Theme>,
  layoutContainer: {
    maxWidth: 1120,
    margin: '0 auto',
    padding: { xs: '0 24px', md: '0 32px' },
  } satisfies SxProps<Theme>,
  contentGrid: {
    display: 'grid',
    gridTemplateColumns: { xs: '1fr', lg: 'minmax(0, 2fr) minmax(0, 1fr)' },
    gap: spacingTokens.lg,
  } satisfies SxProps<Theme>,
  formStack: {
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  card: {
    backgroundColor: 'rgba(255,255,255,0.95)',
    borderRadius: 2,
    border: '1px solid rgba(210,195,176,0.4)',
    boxShadow: '0 28px 64px rgba(61,48,36,0.14)',
    padding: spacingTokens.sm,
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
    backdropFilter: 'blur(12px)',
  } satisfies SxProps<Theme>,
  sectionHeader: {
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    gap: spacingTokens.md,
  } satisfies SxProps<Theme>,
  sectionTitle: {
    fontFamily: typographyTokens.heading,
    fontSize: { xs: 24, md: 28 },
    fontWeight: 700,
    color: colorTokens.earth[800],
  } satisfies SxProps<Theme>,
  pill: {
    width: '100%',
    display: 'inline-flex',
    alignItems: 'center',
    gap: spacingTokens.xs,
    padding: '6px 14px',
    borderRadius: 1,
    backgroundColor: 'rgba(231,229,221,0.8)',
    color: 'rgba(74,57,42,0.7)',
    fontSize: 12,
    fontWeight: 600,
  } satisfies SxProps<Theme>,
  inputGridTwo: {
    display: 'grid',
    gridTemplateColumns: { xs: '1fr', md: 'repeat(2, minmax(0, 1fr))' },
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  inputGridThree: {
    display: 'grid',
    gridTemplateColumns: { xs: '1fr', md: 'repeat(3, minmax(0, 1fr))' },
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  inputLabel: {
    display: 'block',
    fontSize: 13,
    fontWeight: 600,
    color: colorTokens.earth[700],
    marginBottom: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  inputControl: {
    width: '100%',
    padding: '14px 16px',
    borderRadius: 1,
    border: '1px solid rgba(214,198,178,0.7)',
    backgroundColor: 'rgba(255,255,255,0.98)',
    fontSize: 14,
    color: colorTokens.earth[800],
    transition: 'border-color 0.2s ease, box-shadow 0.2s ease',
    outline: 'none',
    '&:focus-visible': {
      borderColor: colorTokens.safari[400],
      boxShadow: '0 0 0 3px rgba(238,92,40,0.18)',
    },
  } satisfies SxProps<Theme>,
  textareaControl: {
    resize: 'none',
    minHeight: 120,
  } satisfies SxProps<Theme>,
  travelerCard: {
    border: '1px solid rgba(210,195,176,0.5)',
    borderRadius: 1,
    padding: spacingTokens.sm,
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
    backgroundColor: 'rgba(255,255,255,0.92)',
  } satisfies SxProps<Theme>,
  checkboxRow: {
    display: 'grid',
    gridTemplateColumns: { xs: 'repeat(2, minmax(0, 1fr))', md: 'repeat(3, minmax(0, 1fr))' },
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  checkboxItem: {
    display: 'flex',
    alignItems: 'center',
    gap: spacingTokens.xs,
    fontSize: 13,
    color: colorTokens.earth[700],
  } satisfies SxProps<Theme>,
  uploadZone: {
    borderRadius: 1,
    padding: spacingTokens.sm,
    textAlign: 'center',
    backgroundColor: 'rgba(255,255,255,0.9)',
    cursor: 'pointer',
    transition: 'border-color 0.2s ease, background-color 0.2s ease',
    '&:hover': {
      borderColor: colorTokens.safari[400],
      backgroundColor: 'rgba(255,247,237,0.9)',
    },
  } satisfies SxProps<Theme>,
  termsStack: {
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  summaryCard: {
    position: { xs: 'relative', lg: 'sticky' },
    top: { lg: 96 },
    backgroundColor: 'rgba(255,255,255,0.95)',
    borderRadius: 2,
    border: '1px solid rgba(210,195,176,0.4)',
    boxShadow: '0 28px 64px rgba(61,48,36,0.16)',
    padding: spacingTokens.sm,
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  summaryTotal: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between',
    marginTop: spacingTokens.md,
    paddingTop: spacingTokens.sm,
    borderTop: '1px solid rgba(210,195,176,0.5)',
  } satisfies SxProps<Theme>,
  actionButton: {
    display: 'inline-flex',
    alignItems: 'center',
    justifyContent: 'center',
    gap: spacingTokens.xs,
    width: '100%',
    padding: '14px 18px',
    borderRadius: 1,
    backgroundImage: `linear-gradient(135deg, ${colorTokens.safari[500]} 0%, ${colorTokens.safari[600]} 100%)`,
    color: colorTokens.neutral.white,
    fontWeight: 600,
    fontSize: 15,
    boxShadow: '0 18px 36px rgba(238,92,40,0.24)',
  } satisfies SxProps<Theme>,
  secondaryAction: {
    display: 'inline-flex',
    alignItems: 'center',
    justifyContent: 'center',
    gap: spacingTokens.xs,
    width: '100%',
    padding: '12px 16px',
    borderRadius: 18,
    backgroundColor: 'rgba(244, 244, 244, 0.9)',
    color: colorTokens.earth[700],
    fontWeight: 600,
    fontSize: 13,
  } satisfies SxProps<Theme>,
  helpStack: {
    marginTop: spacingTokens.xs,
    paddingTop: spacingTokens.xs,
    borderTop: '1px solid rgba(214,198,178,0.5)',
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  paymentGrid: {
    display: 'grid',
    gridTemplateColumns: { xs: '1fr', md: 'repeat(2, minmax(0, 1fr))' },
    gap: spacingTokens.md,
  } satisfies SxProps<Theme>,
  confirmationBanner: {
    borderRadius: 28,
    padding: spacingTokens.xl,
    backgroundImage: 'linear-gradient(135deg, rgba(34,197,94,0.1) 0%, rgba(59,130,246,0.1) 100%)',
    border: '1px solid rgba(34,197,94,0.2)',
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.sm,
  } satisfies SxProps<Theme>,
  confirmationGrid: {
    display: 'grid',
    gridTemplateColumns: { xs: '1fr', md: 'repeat(2, minmax(0, 1fr))' },
    gap: spacingTokens.md,
  } satisfies SxProps<Theme>,
  confirmationCard: {
    borderRadius: radiusTokens.lg,
    border: '1px solid rgba(210,195,176,0.4)',
    padding: spacingTokens.lg,
    backgroundColor: 'rgba(255,255,255,0.9)',
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
} as const;

export const checkoutPageMobileStyles = {
  main: {
    minHeight: '100vh',
    backgroundImage: `linear-gradient(180deg, ${colorTokens.neutral[50]} 0%, rgba(253, 244, 220, 0.92) 100%)`,
    display: 'flex',
    flexDirection: 'column',
    paddingBottom: 120,
  } satisfies SxProps<Theme>,
  container: {
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.lg,
  } satisfies SxProps<Theme>,
  heroSection: {
    margin: '0 16px',
    padding: '32px 20px 24px',
    borderRadius: 2,
    position: 'relative',
    overflow: 'hidden',
    border: '1px solid rgba(210,195,176,0.45)',
    backgroundImage: `linear-gradient(135deg, rgba(255,255,255,0.92) 0%, rgba(252, 240, 216, 0.85) 110%)`,
    boxShadow: '0 24px 48px rgba(61,48,36,0.14)',
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.sm,
    '&::before': {
      content: '""',
      position: 'absolute',
      inset: 0,
      backgroundImage:
        "url('data:image/svg+xml,%3Csvg width='120' height='120' viewBox='0 0 120 120' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd' opacity='0.08'%3E%3Cg fill='#ee5c28' fill-opacity='0.35'%3E%3Cpath d='M68 68v-8h-4v8h-8v4h8v8h4v-8h8v-4h-8zm0-60V0h-4v8h-8v4h8v8h4V12h8V8h-8zM12 68v-8H8v8H0v4h8v8h4v-8h8v-4h-8zM12 8V0H8v8H0v4h8v8h4V12h8V8h-8z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E')",
      pointerEvents: 'none',
    },
  } satisfies SxProps<Theme>,
  heroContent: {
    position: 'relative',
    zIndex: 1,
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  heroBadge: {
    display: 'inline-flex',
    alignItems: 'center',
    gap: spacingTokens.xs,
    padding: '6px 12px',
    borderRadius: 1,
    backgroundColor: 'rgba(238,92,40,0.12)',
    color: colorTokens.safari[600],
    fontSize: 12,
    fontWeight: 600,
    letterSpacing: 0.2,
  } satisfies SxProps<Theme>,
  heroTitle: {
    fontFamily: typographyTokens.heading,
    fontSize: 22,
    fontWeight: 700,
    color: colorTokens.earth[800],
  } satisfies SxProps<Theme>,
  heroSubtitle: {
    fontSize: 14,
    lineHeight: 1.45,
    color: 'rgba(74,57,42,0.75)',
  } satisfies SxProps<Theme>,
  heroMeta: {
    display: 'flex',
    flexWrap: 'wrap',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  heroMetaItem: {
    display: 'inline-flex',
    alignItems: 'center',
    gap: spacingTokens.xs,
    padding: '6px 12px',
    borderRadius: radiusTokens.md,
    backgroundColor: 'rgba(255,255,255,0.92)',
    color: 'rgba(74,57,42,0.75)',
    fontSize: 12,
    fontWeight: 600,
    boxShadow: '0 12px 24px rgba(74,57,42,0.12)',
  } satisfies SxProps<Theme>,
  contentSection: {
    padding: '0 16px',
    paddingBottom: 160,
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.md,
  } satisfies SxProps<Theme>,
  summaryTrigger: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between',
    padding: '14px 18px',
    borderRadius: radiusTokens.lg,
    backgroundColor: 'rgba(255,255,255,0.96)',
    border: '1px solid rgba(210,195,176,0.45)',
    boxShadow: '0 18px 36px rgba(61,48,36,0.14)',
    color: colorTokens.earth[700],
    cursor: 'pointer',
  } satisfies SxProps<Theme>,
  summaryTriggerLabel: {
    display: 'flex',
    alignItems: 'center',
    gap: spacingTokens.xs,
    fontWeight: 600,
    fontSize: 14,
  } satisfies SxProps<Theme>,
  supportCard: {
    backgroundImage: `linear-gradient(135deg, rgba(255,247,237,0.96) 0%, rgba(252,241,219,0.92) 100%)`,
    border: '1px solid rgba(238,92,40,0.2)',
    borderRadius: radiusTokens.lg,
    padding: spacingTokens.sm,
    boxShadow: '0 20px 40px rgba(61,48,36,0.16)',
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  supportTitle: {
    fontWeight: 700,
    color: colorTokens.earth[800],
    fontSize: 16,
  } satisfies SxProps<Theme>,
  supportDescription: {
    fontSize: 12,
    color: 'rgba(74,57,42,0.75)',
  } satisfies SxProps<Theme>,
  supportActions: {
    display: 'flex',
    flexDirection: { xs: 'column', sm: 'row' },
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  supportButton: {
    flex: 1,
    justifyContent: 'center',
  } satisfies SxProps<Theme>,
  bottomBar: {
    position: 'fixed',
    left: 0,
    right: 0,
    bottom: 0,
    padding: '16px',
    backgroundColor: 'rgba(255,255,255,0.98)',
    borderTop: '1px solid rgba(210,195,176,0.45)',
    boxShadow: '0 -18px 36px rgba(61,48,36,0.12)',
    display: 'flex',
    alignItems: 'center',
    gap: spacingTokens.sm,
  } satisfies SxProps<Theme>,
  bottomBarSummary: {
    display: 'flex',
    flexDirection: 'column',
    gap: 4,
    color: colorTokens.earth[800],
  } satisfies SxProps<Theme>,
  bottomBarLabel: {
    fontSize: 12,
    color: 'rgba(74,57,42,0.7)',
  } satisfies SxProps<Theme>,
  bottomBarAmount: {
    fontSize: 20,
    fontWeight: 700,
    color: colorTokens.safari[600],
  } satisfies SxProps<Theme>,
  bottomBarSummaryTrigger: {
    display: 'inline-flex',
    alignItems: 'center',
    gap: spacingTokens.xs,
    marginTop: 4,
    fontSize: 11,
    fontWeight: 600,
    color: colorTokens.safari[600],
    cursor: 'pointer',
  } satisfies SxProps<Theme>,
  summaryDrawerPaper: {
    borderTopLeftRadius: 28,
    borderTopRightRadius: 28,
    backgroundImage: `linear-gradient(180deg, rgba(255,247,237,0.97) 0%, rgba(255,255,255,0.96) 100%)`,
    padding: '12px 20px 28px',
    maxHeight: '85vh',
    boxShadow: '0 -24px 48px rgba(61,48,36,0.2)',
  } satisfies SxProps<Theme>,
  summaryDrawerHandle: {
    width: 44,
    height: 4,
    borderRadius: 999,
    backgroundColor: 'rgba(74,57,42,0.2)',
    margin: '0 auto 12px',
  } satisfies SxProps<Theme>,
  summaryDrawerHeader: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between',
    marginBottom: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  summaryDrawerTitle: {
    fontFamily: typographyTokens.heading,
    fontSize: 20,
    fontWeight: 700,
    color: colorTokens.earth[800],
  } satisfies SxProps<Theme>,
  summaryDrawerContent: {
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.sm,
    overflowY: 'auto',
    paddingRight: 4,
  } satisfies SxProps<Theme>,
  summaryDrawerTotal: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between',
    marginTop: spacingTokens.sm,
    paddingTop: spacingTokens.xs,
    borderTop: '1px solid rgba(210,195,176,0.4)',
  } satisfies SxProps<Theme>,
  summaryDrawerAmount: {
    fontSize: 24,
    fontWeight: 700,
    color: colorTokens.safari[600],
  } satisfies SxProps<Theme>,
  summaryDrawerFooter: {
    marginTop: spacingTokens.sm,
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
  summaryDrawerSecure: {
    fontSize: 11,
    textAlign: 'center',
    color: 'rgba(74,57,42,0.55)',
  } satisfies SxProps<Theme>,
  summaryDrawerHelp: {
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  } satisfies SxProps<Theme>,
} as const;

export const checkoutPageMobileProgressStyles = {
  header: {
    position: 'relative',
    zIndex: 1,
    display: 'flex',
    flexDirection: 'column',
    gap: spacingTokens.xs,
  },
  steps: {
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'space-between',
    gap: spacingTokens.sm,
  },
  stepWrapper: {
    display: 'flex',
    alignItems: 'center',
    gap: spacingTokens.xs,
    flex: 1,
  },
  step: {
    display: 'flex',
    flexDirection: 'column',
    alignItems: 'center',
    gap: 6,
    flex: 1,
  },
  node: {
    width: 32,
    height: 32,
    borderRadius: '50%',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center',
    fontSize: 13,
    fontWeight: 600,
    color: colorTokens.safari[600],
    backgroundColor: 'rgba(255,255,255,0.9)',
    boxShadow: '0 12px 24px rgba(238,92,40,0.14)',
  },
  nodeCompleted: {
    backgroundImage: colorTokens.gradients.brand,
    color: colorTokens.neutral.white,
  },
  nodeActive: {
    backgroundColor: colorTokens.neutral.white,
    color: colorTokens.safari[700],
    border: `2px solid ${colorTokens.safari[400]}`,
    boxShadow: '0 12px 28px rgba(238,92,40,0.2)',
  },
  nodeUpcoming: {
    backgroundColor: 'rgba(210,195,176,0.5)',
    color: 'rgba(74,57,42,0.6)',
  },
  label: {
    fontSize: 11,
    fontWeight: 600,
    textAlign: 'center',
    color: 'rgba(74,57,42,0.65)',
  },
  labelCompleted: {
    color: colorTokens.safari[600],
  },
  labelActive: {
    color: colorTokens.safari[700],
  },
  labelUpcoming: {
    color: 'rgba(74,57,42,0.5)',
  },
  connector: {
    flex: 1,
    height: 4,
    borderRadius: 999,
    backgroundColor: 'rgba(210,195,176,0.45)',
    overflow: 'hidden',
  },
  connectorFilled: {
    width: '100%',
    height: '100%',
    borderRadius: 'inherit',
    backgroundImage: colorTokens.gradients.brand,
  },
  connectorPartial: {
    width: '50%',
    height: '100%',
    borderRadius: 'inherit',
    backgroundImage: colorTokens.gradients.brand,
  },
} as const satisfies WizardProgressStyles;

export default checkoutPageStyles;
